/*Домашняя работа No6. Дата и время. Математические ф-ции. Работа со
строками. Регулярные выражения.*/

/*1. Дана строка 'aaa@bbb@ccc'. Замените все @ на ! с помощью глобального
поиска и замены.*/

let str = 'aaa@bbb@ccc';

console.log(str.replace(/@/g, '!'));

console.log('------------------------------------');

/*2. В переменной date лежит дата в формате 2025-12-31. Преобразуйте эту
дату в формат 31/12/2025.*/

let date = '2025-12-31';

let date1 = date.replace(/(2025)(-12-)(31)/, '$3$2$1');

console.log(date1.replace(/-/g, '/'));

console.log('------------------------------------');

/*3. Дана строка «Я учу javascript!». Вырежете из нее слово «учу» и слово
«javascript» тремя разными способами (через substr, substring, slice).*/

let str1 = "Я учу javascript!";

console.log(str1.substr(2, 14));
console.log(str1.substring(2, 16));
console.log(str1.slice(2, 16));

console.log('------------------------------------');

/*4. Дан массив с элементами 4, 2, 5, 19, 13, 0, 10. Найдите квадратный корень
из суммы кубов его элементов. Для решения воспользуйтесь циклом for.*/

let arr = [4, 2, 5, 19 ,13, 0, 10];

let sum = 0;

for (i = 0; i < arr.length; i++) {
    
    let cube = Math.pow(arr[i], 3);

    sum += cube;  
}

let sqrt = Math.sqrt(sum);

console.log(sqrt);

console.log('------------------------------------');

/*5. Даны переменные a и b. Отнимите от a переменную b и результат
присвойте переменной c. Сделайте так, чтобы в любом случае в переменную
c записалось положительное значение. Проверьте работу скрипта при a и b,
равных соответственно 3 и 5, 6 и 1.*/

function num(a, b) {

    let c = a - b;

    return Math.abs(c);

}

console.log(num(1, 9));

console.log('------------------------------------');

/*6. Выведите на экран текущую дату-время в формате 12:59:59 31.12.2014.
Для решения этой задачи напишите функцию, которая будет добавлять 0
перед днями и месяцами, которые состоят из одной цифры (из 1.9.2014
сделает 01.09.2014).*/

let nowDate = new Date();

function add(i) {
    
    if (i <= 9) {

    return '0' + i;

    } else {

        return i;

    }
}

let strTime = add(nowDate.getHours()) + ':' + add(nowDate.getMinutes()) + ':' + add(nowDate.getSeconds()) + ' ' + add(nowDate.getDate()) + '.' + add(nowDate.getMonth()+1) + '.' + nowDate.getFullYear();

console.log(strTime);

console.log('------------------------------------');

/*7. Дана строка 'aa aba abba abbba abca abea'. Напишите регулярку, которая
найдет строки aba, abba, abbba по шаблону: буква 'a', буква 'b' любое
количество раз, буква 'a'.*/

let str2 = 'aa aba abba abbba abca abea';

console.log(str2.match(/a[b]+a/g));

console.log('------------------------------------');

/*8. Напишите ф-цию строгой проверки ввода номер телефона в
международном формате (<код страны> <код города или сети> <номер
телефона>). Функция должна возвращать true или false. Используйте
регулярные выражения.*/

function validPhone(phone) {
    const reg = /^\+?375 ?\(?[1-9]{2}\)? ?[0-9\- ]{7,9}$/;

    return reg.test(phone);
}

console.log(validPhone('+375 29 357-84-96'));

console.log('------------------------------------');

/*9. Напишите ф-цию строгой проверки адреса эл. почты с учетом следующих
условия:
- весь адрес не должен содержать русские буквы и спецсимволы, кроме
одной «собачки», знака подчеркивания, дефиса и точки;
- имя эл. почты (до знака @) должно быть длиной более 2 символов, причем
имя может содержать только буквы, цифры, но не быть первыми и
единственными в имени;
- после последней точки и после @, домен верхнего уровня (ru, by, com и т.п.)
не может быть длиной менее 2 и более 11 символов.

Функция должна возвращать true или false. Используйте регулярные
выражения.*/

function validEmail(email) {
    const reg = /^[a-z0-9][a-z0-9]+[\-_\.]?[a-z0-9]+@[a-z0-9][\-\.]?[a-z0-9]+\.[a-z]{2,11}$/;

    if (reg.test(email)) return true;

    return false;
}

console.log(validEmail('name@gmail.com'));

console.log('------------------------------------');

/*10. Напишите ф-цию, которая из полного адреса с параметрами и без,
например: https://tech.onliner.by/2018/04/26/smart-do-200/?
utm_source=main_tile&utm_medium=smartdo200#zag3 , получит адрес
доменного имени (https://tech.onliner.by), остальную часть адреса без
параметров (/2018/04/26/smart-do-200/), параметры
(utm_source=main_tile&utm_medium=smartdo200) и хеш (#zag3). В адресе
может и не быть каких-либо составляющих. Ф-ция должна возвращать
массив.

* Для быстрого составления регулярного выражения и проверки исп. онлайн-
сервис https://regex101.com/.

Для ввода значений можете использовать ф-цию prompt(), либо задавать
значения при инициализации переменных в коде.
Для вывода результатов скриптов вы можете использовать функции: alert()
для вывода всплывающего окна; console.log() для вывода в консоль браузера;
document.write() для вывода в «тело» HTML-документа.*/

function parseUrl(url) {
    const reg = /^(https?:\/\/[\w\.]+)(\/.+\/)?(\/?\?[^#\n]+)?(#[a-z0-9]+)?$/;

    return url.match(reg);
}

console.log(parseUrl('https://tech.onliner.by/2018/04/26/smart-do-200/?utm_source=main_tile&utm_medium=smartdo200#zag3'));